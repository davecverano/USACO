/*
ID: verano.1
TASK: namenum
LANG: C++                 
*/
/* LANG can be C++11 or C++14 for those more recent releases */
#include <iostream>
#include <fstream>
#include <string>
#include <vector>
using namespace std;


string convertinttostring(long number){
	vector<char> newarray;
	cout << number << endl;
	while(number!=0){
		int remainder = number%10;
		newarray.push_back(remainder+'0');
		number = number/10;
	}
	string numberstring(newarray.begin(),newarray.end());
	return numberstring;
}

int numbermatchletter(int number,char letter){
	if((letter=='A'|| letter=='B'|| letter=='C')&&number==2){
		return 1;
	}
	else if((letter=='D'|| letter=='E'|| letter=='F')&&number==3){
		return 1;
	}
	else if((letter=='G'|| letter=='H'|| letter=='I')&&number==4){
		return 1;
	}
	else if((letter=='J'|| letter=='K'|| letter=='L')&&number==5){
		return 1;
	}
	else if((letter=='M'|| letter=='N'|| letter=='O')&&number==6){
		return 1;
	}
	else if((letter=='P'|| letter=='R'|| letter=='S')&&number==7){
		return 1;
	}
	else if((letter=='T'|| letter=='U'|| letter=='V')&&number==8){
		return 1;
	}
	else if((letter=='W'|| letter=='X'|| letter=='Y')&&number==9){
		return 1;
	}
	return 0;
}

int main(){

ofstream fout ("namenum.out");
ifstream fin ("namenum.in");
ifstream dic ("dict.txt");

vector<string> dictionary;

for(int i = 0;i<5000;i++){
	string temp;
	dic >> temp;
	dictionary.push_back(temp);
}
string stringinput;
fin >> stringinput;
//cout << input;
//string stringinput = convertinttostring(input);
//cout <<  stringinput;
int noname = 1;
for(int i = 0;i<5000;i++){
	int match = 1;
	if(dictionary[i].length()==stringinput.length()){
		//cout << endl;
		for(int j = 0;j<stringinput.length();j++){
			//cout << dictionary[i][j];
		
			if(!numbermatchletter(stringinput[j]-'0',dictionary[i][j])){
				//cout << " " << stringinput[stringinput.length()-1-j]-'0' << " " << dictionary[i][j];
			
				match = 0;
				break;
			}
		}
		if(match!=0){
			fout << dictionary[i] << endl;
			noname = 0;
		}
	}
	if(noname!=0&&i==4999){
		fout << "NONE" << endl;
	}
}

}
